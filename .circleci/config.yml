# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
# For a detailed guide to building and testing on iOS, read the docs:
# https://circleci.com/docs/2.0/testing-ios/
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  build-linux:
    docker:
      - image: cimg/rust:1.58.1
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-linux-{{ checksum "Cargo.lock" }}
            - v1-linux-
      - run: cargo build --release --target x86_64-unknown-linux-gnu
      - save_cache:
          key: v1-linux-{{ checksum "Cargo.lock" }}
          paths:
            - target
            - ~/.cargo/registry
      - store_artifacts:
          path: target/x86_64-unknown-linux-gnu/release/depgraph
          destination: depgraph-x86_64-unknown-linux-gnu

  build-mac:
    macos:
      xcode: 13.2.1 # Specify the Xcode version to use
    steps:
      - checkout
      - run: brew install rustup-init
      - run: rustup-init -y
      - run: source $HOME/.cargo/env && rustup target add aarch64-apple-darwin
      - restore_cache:
          keys:
            - v1-mac-{{ checksum "Cargo.lock" }}
            - v1-mac-
      - run: source $HOME/.cargo/env && cargo build --release --target x86_64-apple-darwin
      - run: source $HOME/.cargo/env && cargo build --release --target aarch64-apple-darwin
      - save_cache:
          key: v1-mac-{{ checksum "Cargo.lock" }}
          paths:
            - target
            - ~/.cargo/registry
      - store_artifacts:
          path: target/x86_64-apple-darwin/release/depgraph
          destination: depgraph-x86_64-apple-darwin
      - store_artifacts:
          path: target/aarch64-apple-darwin/release/depgraph
          destination: depgraph-aarch64-apple-darwin

workflows:
  rust:
    jobs:
      - build-linux
      - build-mac
